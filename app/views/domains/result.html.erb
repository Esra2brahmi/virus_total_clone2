<!-- Top Search Bar -->
<div class="w-full p-4 flex justify-center bg-[#1e1d2e] shadow-md">
  <div class="relative w-1/2">
    <input type="text" value="<%= params[:query] %>" class="w-full p-2 pl-10 rounded-md text-white bg-[#394568] focus:outline-none" readonly />
    <svg class="absolute left-3 top-2.5 w-5 h-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35M17 11a6 6 0 11-12 0 6 6 0 0112 0z" />
    </svg>
  </div>
</div>

<!-- Main Analysis Section -->
<div class="max-w-5xl mx-auto mt-10 grid grid-cols-1 md:grid-cols-3 gap-4">
 <% malicious = @result.dig("attributes", "last_analysis_stats", "malicious") || 0 %>
<% total = @result.dig("attributes", "last_analysis_stats")&.values&.sum || 1 %>

<% if malicious == 0 %>
  <% percent = 100 %>
  <% ring_color = "#22c55e" %>
<% else %>
  <% percent = [(malicious.to_f / total) * 100, 100].min.round %>
  <% ring_color = "#ef4444" %>
<% end %>

<div class="bg-[#1e1d2e] p-6 rounded-lg shadow text-center">
  <div class="relative w-24 h-24 mx-auto">
    <svg class="w-full h-full transform -rotate-90" viewBox="0 0 36 36">
      <!-- Background circle -->
      <circle
        cx="18"
        cy="18"
        r="16"
        fill="none"
        stroke="#394568"
        stroke-width="4"
      />

      <!-- Progress arc -->
      <circle
        cx="18"
        cy="18"
        r="16"
        fill="none"
        stroke="<%= ring_color %>"
        stroke-width="4"
        stroke-dasharray="100"
        stroke-dashoffset="<%= 100 - percent %>"
        stroke-linecap="round"
        style="transition: stroke-dashoffset 1s ease"
      />
    </svg>

    <!-- Score Text in center -->
    <div class="absolute inset-0 flex flex-col items-center justify-center text-white">
      <p class="text-xl font-bold"><%= malicious %></p>
      <p class="text-xs text-gray-400">/ <%= total %></p>
    </div>
  </div>

  <p class="text-gray-400 mt-2">Detection Score</p>
</div>

  <!-- Alert Box -->
  <div class="md:col-span-2 bg-[#1e1d2e] p-6 rounded-lg shadow md:flex md:justify-between md:items-start">
    <!-- Main Alert Info -->
    <div class="md:w-2/3 flex flex-col space-y-2">
      <% malicious_count = @result.dig("attributes", "last_analysis_stats", "malicious") %>
      <% total_engines = @result.dig("attributes", "last_analysis_stats")&.values&.sum || 0 %>
  
      <div class="flex items-center space-x-4">
      <% if malicious_count > 0 %>
        <p class="flex items-center gap-3 text-red-700 text-sm font-medium">
          <span class="flex items-center justify-center w-7 h-7 rounded-full border-2 border-red-500">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </span>
          <span><%= malicious_count %> / <%= total_engines %> security vendors flagged this as malicious</span>
        </p>
      <% else %>
        <p class="flex items-center gap-3 text-green-500 text-sm font-medium">
          <span class="flex items-center justify-center w-7 h-7 rounded-full border-2 border-green-500">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
            </svg>
          </span>
          <span>No security vendors flagged this as malicious</span>
        </p>
      <% end %>
      </div>
  
      <p class="text-white text-sm"><strong>Domain:</strong> <%= @result["id"] %></p>
      <p class="text-gray-400 text-sm mt-1"><strong>Registrar:</strong> <%= @result.dig("attributes", "registrar") || "N/A" %></p>
    </div>
  
    <!-- Vertical Line -->
    <div class="hidden md:block w-px bg-[#394568] mx-6 h-full"></div>
  
    <!-- Extra Info: Date & Reputation -->
    <div class="md:w-1/3 mt-6 md:mt-0 space-y-2">
      <p class="text-gray-400 text-sm">
        <strong>Last Analysis:</strong>
        <%= Time.at(@result.dig("attributes", "last_analysis_date")) rescue "N/A" %>
      </p>
  
      <p class="text-gray-400 text-sm">
        <strong>Reputation:</strong>
        <%= @result.dig("attributes", "reputation") || "N/A" %>
      </p>
    </div> 
  </div>
</div>
</div>

<!-- Info Table -->
<div class="max-w-5xl mx-auto mt-6 bg-[#1e1d2e] p-6 rounded-lg shadow text-white text-sm">
  <p><strong>Creation Date:</strong> <%= Time.at(@result.dig("attributes", "creation_date")) rescue "N/A" %></p>
  <p><strong>Last Update:</strong> <%= Time.at(@result.dig("attributes", "last_update_date")) rescue "N/A" %></p>
  <p><strong>Categories:</strong> <%= @result.dig("attributes", "categories")&.values&.join(", ") || "N/A" %></p>
  <p><strong>Tags:</strong> <%= @result.dig("attributes", "tags")&.join(", ") || "N/A" %></p>
</div>

<!-- Tabs Navigation -->
<div class="max-w-5xl mx-auto mt-10">
  <div class="flex border-b border-[#394568] text-white">
    <button class="tab-button px-4 py-2 focus:outline-none active-tab" data-tab="detection">Detection</button>
    <button class="tab-button px-4 py-2 focus:outline-none" data-tab="details">Details</button>
    <button class="tab-button px-4 py-2 focus:outline-none" data-tab="relations">Relations</button>
    <button class="tab-button px-4 py-2 focus:outline-none" data-tab="community">Community</button>
  </div>

  <!-- Tab Content Wrapper -->
  <div class="bg-[#1e1d2e] p-6 rounded-b-lg shadow text-white">
    <!-- Detection Tab -->
    <div class="tab-content" id="detection">
      <%= render 'ip_addresses/detection', result: @result %>
    </div>

    <!-- Details Tab -->
    <div class="tab-content hidden" id="details">
      <%= render 'domains/details' %>
    </div>

    <!-- Relations Tab -->
    <div class="tab-content hidden" id="relations">
      <%= render 'domains/relations' %>
    </div>

    <!-- Community Tab -->
    <div class="tab-content hidden" id="community">
      <%= render 'ip_addresses/community' %>
    </div>
  </div>
</div>

<script>
  document.querySelectorAll('.tab-button').forEach(button => {
    button.addEventListener('click', () => {
      const target = button.getAttribute('data-tab')

      document.querySelectorAll('.tab-button').forEach(btn => {
        btn.classList.remove('active-tab')
      })
      button.classList.add('active-tab')

      document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.add('hidden')
      })
      document.getElementById(target).classList.remove('hidden')
    })
  })

  // Global function for loading communicating files pages
  function loadPage(page) {
    const domain = '<%= params[:query] %>';
    const relationsContent = document.getElementById('relations');
    
    if (!relationsContent) {
      console.error('Relations tab not found');
      return;
    }
    
    // Find the load more button and show loading state
    const loadMoreBtn = relationsContent.querySelector('button[onclick*="loadPage"]');
    if (loadMoreBtn) {
      loadMoreBtn.innerHTML = `
        <div class="flex gap-1">
          <div class="w-1 h-1 bg-white rounded-full animate-pulse"></div>
          <div class="w-1 h-1 bg-white rounded-full animate-pulse" style="animation-delay: 0.1s"></div>
          <div class="w-1 h-1 bg-white rounded-full animate-pulse" style="animation-delay: 0.2s"></div>
        </div>
      `;
      loadMoreBtn.disabled = true;
    }
    
    fetch(`/domains/communicating_files?query=${encodeURIComponent(domain)}&page=${page}`)
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.text();
      })
      .then(html => {
        // Create a temporary div to parse the HTML
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = html;
        
        // Get the existing table body
        const existingTbody = relationsContent.querySelector('#files-tbody');
        if (existingTbody) {
          // Extract new rows from the response
          const newTbody = tempDiv.querySelector('#files-tbody');
          if (newTbody) {
            // Add new rows to the existing table
            existingTbody.insertAdjacentHTML('beforeend', newTbody.innerHTML);
          }
          
          // Update the load more button
          const newLoadMoreBtn = tempDiv.querySelector('button[onclick*="loadPage"]');
          if (newLoadMoreBtn) {
            // Replace the old button with the new one
            if (loadMoreBtn) {
              loadMoreBtn.outerHTML = newLoadMoreBtn.outerHTML;
            }
          } else {
            // No more pages, remove the button
            if (loadMoreBtn) {
              loadMoreBtn.parentElement.remove();
            }
          }
        } else {
          // Fallback: replace entire content
          relationsContent.innerHTML = html;
        }
      })
      .catch(error => {
        console.error('Error loading page:', error);
        if (loadMoreBtn) {
          loadMoreBtn.innerHTML = `
            <span class="text-red-400">Error loading files</span>
            <button onclick="loadPage(${page})" class="mt-2 px-3 py-1 bg-[#394568] text-white rounded hover:bg-[#4a5a7a] transition">Retry</button>
          `;
          loadMoreBtn.disabled = false;
        }
      });
  }
</script>

<style>
  .active-tab {
    background-color: #394568;
    border-bottom: 2px solid #5a77ff;
  }
</style>

